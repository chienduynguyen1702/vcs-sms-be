version: '3.7'

services:
  traefik:
    image: traefik:v3.0
    command:
      # traefik configuration
      - "--api.insecure=true"
      - "--providers.swarm=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.tcp.forwardedHeaders.insecure=true"
      - "--accessLog.filePath=/var/log/traefik/traefik.log"
      # tcp entrypoint
      - "--entrypoints.postgres.address=:5432"
      - "--entrypoints.redis.address=:6379"
      - "--entrypoints.kafka.address=:9092"
      - "--entrypoints.elasticsearch.address=:9200"
      - "--entrypoints.consumer.address=:50051"
      - "--entrypoints.mail.address=:50052"
      # http entrypoint
      - "--entrypoints.gateway.address=:9090"

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - vcs-sms-checkpoint
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        # Router configuration


  gateway:
    image: localhost:5000/gateway:latest
    env_file:
      - ./gateway/.env.container
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - "report-file-volume:/reports"
    networks:
      - vcs-sms-checkpoint
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        # Router configuration
        - "traefik.http.routers.gateway.rule=Host(`gateway.localhost`)"
        - "traefik.http.routers.gateway.entrypoints=web"
        - "traefik.http.routers.gateway.service=gateway-service"
        # Service configuration
        - "traefik.http.services.gateway-service.loadbalancer.server.port=8080"

  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: vcs
      POSTGRES_PASSWORD: vcs
      POSTGRES_DB: $DB_NAME
    env_file:
      - ./gateway/.env
    volumes:
      - vcs_sms_db_volume:/var/lib/postgresql/data
    networks:
      - vcs-sms-checkpoint
    deploy:
      labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db.entrypoints=postgres"
      - "traefik.tcp.services.db.loadbalancer.server.port=5432"

  redis:
    image: redis:alpine
    ports:
      - "$REDIS_PORT:6379"
    networks:
      - vcs-sms-checkpoint
    deploy:
      labels:
        - "traefik.enable=false"

  kafka:
    image: apache/kafka:latest
    hostname: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    # ports:
    #   - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - vcs-sms-checkpoint
    deploy:
      labels:
        - "traefik.enable=false"

  health-check:
    dns:
      - 8.8.8.8
    image: localhost:5000/health-check:latest
    env_file:
      - ./health-check/.env.container
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - vcs-sms-checkpoint
    deploy:
      labels:
      - "traefik.enable=false"

  consumer:
    dns:
      - 8.8.8.8
    image: localhost:5000/consumer:latest
    volumes:
      - "report-file-volume:/reports"
    env_file:
      - ./consumer/.env.container
    environment:
      - ELASTICSEARCH_HOST=$ELASTICSEARCH_HOST
      - ELASTIC_USERNAME=$ELASTIC_USERNAME
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
    depends_on:
      - kafka
    networks:
      - vcs-sms-checkpoint
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        # router
        - "traefik.tcp.routers.consumer.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.consumer.entryPoints=consumer"
        - "traefik.tcp.routers.consumer.service=consumer"
        # service
        - "traefik.tcp.services.consumer.loadbalancer.server.port=50051"

  mail:
    image: localhost:5000/mail:latest
    volumes:
      - "report-file-volume:/reports"
    env_file:
      - ./mail/.env.container
    environment:
      - MAIL_SERVICE_MAIL=chienduynguyen1702@gmail.com
      - MAIL_SERVICE_PASS=nzmo gayl tfwt vale
    networks:
      - vcs-sms-checkpoint
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        # router
        - "traefik.tcp.routers.mail.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.mail.entryPoints=mail"
        - "traefik.tcp.routers.mail.service=mail"
        # service
        - "traefik.tcp.services.mail.loadbalancer.server.port=50052"

volumes:
  vcs_sms_db_volume:
  report-file-volume:
    driver: local
    driver_opts:
      type: "none"
      device: "./reports"
      o: "bind"
  esdata:

networks:
  vcs-sms-checkpoint:
    driver: overlay
