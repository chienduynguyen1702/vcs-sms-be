version: '3.7'

services:
  gate-way:
    image: localhost:5000/gateway:latest
    env_file:
      - ./gateway/.env.container
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - "report-file-volume:/reports"
    networks:
      - vcs-sms-checkpoint

  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: vcs
      POSTGRES_PASSWORD: vcs
      POSTGRES_DB: $DB_NAME
    env_file:
      - ./gateway/.env
    volumes:
      - vcs_sms_db_volume:/var/lib/postgresql/data
    networks:
      - vcs-sms-checkpoint

  redis:
    image: redis:alpine
    ports:
      - "$REDIS_PORT:6379"
    networks:
      - vcs-sms-checkpoint

  kafka:
    image: apache/kafka:latest
    hostname: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - vcs-sms-checkpoint

  health-check:
    dns:
      - 8.8.8.8
    image: localhost:5000/health-check:latest
    env_file:
      - ./health-check/.env.container
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - vcs-sms-checkpoint

  consumer:
    dns:
      - 8.8.8.8
    image: localhost:5000/consumer:latest
    volumes:
      - "report-file-volume:/reports"
    env_file:
      - ./consumer/.env.container
    depends_on:
      - kafka
    networks:
      - vcs-sms-checkpoint

  mail:
    image: localhost:5000/mail:latest
    volumes:
      - "report-file-volume:/reports"
    env_file:
      - ./mail/.env.container
    networks:
      - vcs-sms-checkpoint

volumes:
  vcs_sms_db_volume:
  report-file-volume:
    driver: local
    driver_opts:
      type: "none"
      device: "./reports"
      o: "bind"

networks:
  vcs-sms-checkpoint:
    driver: overlay
